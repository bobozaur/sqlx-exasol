[workspace]
members = [".", "sqlx-exasol-cli", "sqlx-exasol-impl", "sqlx-exasol-macros"]

[workspace.package]
version = "0.8.6"
license = "MIT OR Apache-2.0"
edition = "2024"
rust-version = "1.86.0"
repository = "https://github.com/bobozaur/sqlx-exasol"
keywords = ["database", "sql", "exasol", "sqlx", "driver"]
categories = ["database", "asynchronous"]
authors = ["Bogdan Mircea <mirceapetrebogdan@gmail.com>"]

[package]
name = "sqlx-exasol"
documentation = "https://docs.rs/sqlx-exasol"
description = "Exasol driver for the SQLx framework."
version.workspace = true
license.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true
exclude = ["tests/*"]

[package.metadata.docs.rs]
features = [
    "etl",
    "chrono",
    "rust_decimal",
    "uuid",
    "compression",
    "migrate",
    "macros",
]

[features]
default = ["any", "macros", "migrate"]

derive = ["sqlx/derive"]
macros = ["sqlx/macros", "sqlx-exasol-impl/macros", "dep:sqlx-exasol-macros"]
migrate = ["sqlx/migrate", "sqlx-exasol-impl/migrate"]

# Base runtime features without TLS
runtime-async-std = ["sqlx/runtime-async-std"]
runtime-tokio = ["sqlx/runtime-tokio"]

# TLS features
tls-native-tls = ["sqlx/tls-native-tls", "sqlx-exasol-impl/native-tls"]
tls-rustls = ["sqlx/tls-rustls", "sqlx-exasol-impl/rustls"]
tls-rustls-aws-lc-rs = ["sqlx/tls-rustls-aws-lc-rs", "sqlx-exasol-impl/rustls"]
tls-rustls-ring = ["sqlx/tls-rustls-ring", "sqlx-exasol-impl/rustls"]
tls-rustls-ring-webpki = [
    "sqlx/tls-rustls-ring-webpki",
    "sqlx-exasol-impl/rustls",
]
tls-rustls-ring-native-roots = [
    "sqlx/tls-rustls-ring-native-roots",
    "sqlx-exasol-impl/rustls",
]

# Database
any = ["sqlx/any", "sqlx-exasol-impl/any"]

# Types
chrono = ["sqlx/chrono", "sqlx-exasol-impl/chrono"]
rust_decimal = ["sqlx/rust_decimal", "sqlx-exasol-impl/rust_decimal"]
uuid = ["sqlx/uuid", "sqlx-exasol-impl/uuid"]

# Driver specific features
compression = ["sqlx-exasol-impl/compression"]
etl = ["sqlx-exasol-impl/etl"]

[workspace.dependencies]
# Internal
sqlx-exasol-macros = { path = "sqlx-exasol-macros" }
sqlx-exasol-impl = { path = "sqlx-exasol-impl" }

# External
anyhow = "1"
arrayvec = "0.7"
async-compression = { version = "0.4", features = [
    "futures-io",
    "gzip",
    "zlib",
] }
async-tungstenite = "0.29"
base64 = "0.22"
chrono = { version = "0.4", features = ["serde"] }
clap = { version = "4", features = ["derive", "env", "wrap_help"] }
console = "0.15"
dotenvy = "0.15"
futures-io = "0.3"
futures-util = "0.3"
futures-channel = { version = "0.3", features = ["sink"] }
futures-core = "0.3"
hex = "0.4"
http-body-util = "0.1"
hyper = { version = "1.4", features = ["server", "http1"] }
lru = "0.12"
native-tls = "0.2"
paste = "1"
quote = { version = "1", default-features = false }
rand = "0.8"
rsa = "0.9"
serde = { version = "1", features = ["derive", "rc"] }
serde_json = { version = "1", features = ["raw_value"] }
sqlx = { path = "../sqlx" }
sqlx-cli = { path = "../sqlx/sqlx-cli" }
sqlx-core = { path = "../sqlx/sqlx-core", features = ["offline"] }
sqlx-macros-core = { path = "../sqlx/sqlx-macros-core", features = ["macros"] }
syn = { version = "2", default-features = false, features = [
    "parsing",
    "proc-macro",
] }
thiserror = "1"
tokio = { version = "1", features = ["full"] }
tracing = { version = "0.1", features = ["log"] }
url = "2"
uuid = { version = "1", features = ["serde"] }
rcgen = "0.13"
rust_decimal = "1"
rustls = { version = "0.23", default-features = false, features = [
    "std",
    "tls12",
] }

[dependencies]
sqlx-exasol-macros = { workspace = true, optional = true }
sqlx-exasol-impl = { workspace = true }
sqlx = { workspace = true }

[dev-dependencies]
anyhow = { workspace = true }
chrono = { workspace = true }
dotenvy = { workspace = true }
futures-util = { workspace = true }
paste = { workspace = true }
rustls = { workspace = true }
rust_decimal = { workspace = true }
sqlx = { workspace = true }
tokio = { workspace = true }
url = { workspace = true }
uuid = { workspace = true }

[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
module_name_repetitions = "allow"

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
rust_2021_compatibility = { level = "warn", priority = -1 }
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
