name: "Exasol Cluster"
description: "Instantiates an Exasol database cluster"
inputs:
  exasol-version:
    description: "Version of the Exasol database"
    required: true
  num-nodes:
    description: "Number of nodes to spawn in the cluster"
    required: true
outputs:
  no-tls-url:
    description: "Connection string for the database with TLS disabled"
    value: ${{ steps.connection-strings.outputs.no-tls-url }}
  tls-url:
    description: "Connection string for the database with TLS enabled"
    value: ${{ steps.connection-strings.outputs.tls-url }}
runs:
  using: "composite"
  steps:
    - name: Restore Exasol image
      id: cache-docker-exasol
      uses: actions/cache@v3
      with:
        path: ~/ci/cache/docker
        key: cache-docker-exasol-${{ inputs.exasol-version }}

    - name: Store Exasol image if cache miss
      if: steps.cache-docker-exasol.outputs.cache-hit != 'true'
      run: docker pull exasol/docker-db:${{ inputs.exasol-version }} && mkdir -p ~/ci/cache/docker && docker image save exasol/docker-db:${{ inputs.exasol-version }} --output ~/ci/cache/docker/exasol-${{ inputs.exasol-version }}.tar
      shell: bash

    - name: Load Exasol image
      run: docker image load --input ~/ci/cache/docker/exasol-${{ inputs.exasol-version }}.tar
      shell: bash

    - name: Set up Docker network
      run: docker network create --driver=bridge --subnet=10.10.10.0/24 sqlx
      shell: bash

    - name: Initialize Exasol cluster
      run: |
        docker run -v $HOME/sqlx1:/exa --rm --privileged -i exasol/docker-db:${{ inputs.exasol-version }} init-sc --template --num-nodes ${{ inputs.num-nodes }}
        docker run --rm -v $HOME/sqlx1:/exa exasol/docker-db:${{ inputs.exasol-version }} exaconf modify-volume -n DataVolume1 -s 4GiB
        sudo truncate -s 6G $HOME/sqlx1/data/storage/dev.1

        for (( i=1; i<3; i++ )); do
          sudo cp -R $HOME/sqlx1 $HOME/sqlx$i
        done
      shell: bash

    - name: Start Exasol cluster
      run: |
        for (( i=1; i<=3; i++ )); do
          docker run --name sqlx$i --detach --network=sqlx --ip 10.10.10.1$i --privileged --stop-timeout 120 -v $HOME/sqlx$i:/exa exasol/docker-db:${{ inputs.exasol-version }} init-sc --node-id 1$i
        done
      shell: bash

    - name: Wait until Exasol cluster is live
      timeout-minutes: 5
      run: |
        RC=1

        while [[ $RC -ne 0 ]]; do
          docker exec -it sqlx1 /bin/bash -c '`find /usr/opt -name exaplus | head -1` -c localhost:8563 -u sys -p exasol -sql "SELECT * FROM DUAL;"'
          RC=$?
          sleep 5
        done
      shell: bash

    # The Exasol cluster is created with this subnet by default
    - name: Create connection strings
      id: connection-strings
      run: |
        DATABASE_URL="exa://sys:exasol@10.10.10.11..1$NUM_NODES:8563"
        echo "no-tls-url=$DATABASE_URL?ssl-mode=disabled" >> $GITHUB_OUTPUT
        echo "tls-url=$DATABASE_URL?ssl-mode=required" >> $GITHUB_OUTPUT
      shell: bash
